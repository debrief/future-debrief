{
  "permissions": {
    "allow": [
      "Bash(yarn init:*)",
      "Bash(yarn add:*)",
      "Bash(mkdir:*)",
      "Bash(yarn build-plugin:*)",
      "Bash(rm:*)",
      "Bash(npx husky:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(yarn test)",
      "Bash(yarn lint)",
      "Bash(yarn format)",
      "Bash(yarn lint:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(npm run build:*)",
      "Bash(yarn build)",
      "Bash(find:*)",
      "Bash(yarn dev)",
      "Bash(yarn build)",
      "Bash(npm run test:integration:*)",
      "Bash(npx:*)",
      "Bash(yarn test:*)",
      "Bash(timeout 30s yarn test:integration --grep \"should display BackChannel icon after initialization\")",
      "Bash(pkill:*)",
      "Bash(mv:*)",
      "Bash(python3:*)",
      "Bash(grep:*)",
      "Bash(npm run test:*)",
      "Bash(yarn test)",
      "Bash(yarn test:*)",
      "Bash(npx playwright test:*)",
      "Bash(curl:*)",
      "Bash(node:*)",
      "Bash(rm:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(npm run dev:*)",
      "Bash(npx tsc:*)",
      "Bash(npm install:*)",
      "Bash(timeout 10s yarn dev)",
      "Bash(grep:*)",
      "Bash(yarn build)",
      "Bash(/dev/null)",
      "Bash(yarn typecheck)",
      "Bash(ls:*)",
      "Bash(awk:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(git stash:*)",
      "Bash(git rebase:*)",
      "mcp__ide__getDiagnostics",
      "WebFetch(domain:github.com)",
      "Bash(yarn dev:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(open debug-multiple.html)",
      "Bash(sed:*)",
      "Bash(git worktree:*)",
      "Bash(gh issue view:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(gh issue edit:*)",
      "Bash(gh label:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(gh pr create:*)",
      "Bash(git commit:*)",
      "Bash(git restore:*)",
      "Bash(echo:*)",
      "Bash(gh issue create:*)",
      "Bash(cp:*)",
      "Bash(timeout 30s npx playwright test tests/phase1.spec.ts --grep \"should initialize properly\")",
      "WebFetch(domain:deepbluecltd.github.io)",
      "Bash(yarn build:*)",
      "Bash(open /Users/ian/git/GramFrame_parent/gram_b/test-file-protocol.html)",
      "Bash(open test-standalone.html)",
      "Bash(git tag:*)",
      "Bash(cat:*)",
      "Bash(yamllint:*)",
      "Bash(open http://localhost:5173/debug.html)",
      "Bash(touch:*)",
      "Bash(open http://localhost:5173/debug-multiple.html)",
      "Bash(open http://localhost:5173/debug-focus-test.html)",
      "Bash(open http://localhost:5175/debug.html)",
      "Bash(pnpm create:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm exec:*)",
      "Bash(pnpm generate-types:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(npm run lint:*)",
      "Bash(timeout 10s npm run dev:*)",
      "Bash(timeout:*)",
      "Bash(pnpm list:*)",
      "Bash(open http://localhost:9323)",
      "Bash(open http://localhost:5176)",
      "Bash(VITE_PORT=5175 pnpm dev)",
      "Bash(open http://localhost:5175/tools/change-color-to-red)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Bash(npm run coverage:*)",
      "WebFetch(domain:debrief.github.io)",
      "Bash(npm create:*)",
      "Bash(tree:*)",
      "Bash(npm run:*)",
      "WebSearch",
      "Bash(quicktype:*)",
      "WebFetch(domain:docs.quicktype.io)",
      "WebFetch(domain:json-schema.org)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(yarn install)",
      "Bash(yarn compile)",
      "Bash(pnpm compile:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpx jest:*)",
      "Bash(pnpm -w run build:web-components)",
      "Bash(pnpm storybook:*)",
      "Bash(pnpm info:*)",
      "Bash(pnpm --filter @debrief/web-components test)",
      "Bash(pnpm --filter @debrief/web-components build-storybook)",
      "Bash(pnpx tsc:*)",
      "Bash(pnpm --filter @debrief/shared-types build)",
      "Bash(pnpm:*)",
      "Bash(turbo run:*)",
      "Bash(git log:*)",
      "Bash(python test_plot_api.py:*)",
      "Bash(time pnpm build)",
      "Bash(time pnpm build:types)",
      "Bash(time pnpm build:ts)",
      "Bash(time pnpm build:python)",
      "Bash(time npx tsc)",
      "Bash(time npx json-schema-to-typescript --version)",
      "Bash(time quicktype:*)",
      "Bash(time pnpm build:ts:post-process)",
      "Bash(NODE_NO_WARNINGS=1 time pnpm build:types)",
      "Bash(export NODE_NO_WARNINGS=1)",
      "Bash(npm --version)",
      "Bash(time pnpm --filter @debrief/web-components build)",
      "Bash(time pnpm --filter @debrief/web-components build:fast)",
      "WebFetch(domain:code.visualstudio.com)",
      "Bash(gh pr view:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh repo view:*)",
      "Bash(gh issue:*)",
      "Bash(gh pr list:*)",
      "Bash(python -m cli list-tools:*)",
      "Bash(python cli.py list-tools:*)",
      "Bash(python packager.py:*)",
      "Bash(python -m packager:*)",
      "WebFetch(domain:spec.modelcontextprotocol.io)",
      "WebFetch(domain:localhost)",
      "Bash(python -m cli:*)",
      "Bash(kill:*)",
      "Bash(open http://localhost:5173/)",
      "Bash(open http://localhost:5174/)",
      "Bash(python -m zipfile:*)",
      "Bash(python:*)",
      "Read(//Users/ian/git/future-debrief-parent/worktrees/**)",
      "Bash(TEST_MODE=dev npx playwright test tests/structure/package-structure.spec.ts)",
      "Bash(pip install:*)",
      "Bash(TEST_MODE=dev npx playwright test tests/structure/package-structure.spec.ts --timeout=30000)",
      "Bash(TEST_MODE=pyz npx playwright test tests/structure/package-structure.spec.ts --timeout=60000)",
      "Bash(TEST_MODE=pyz npx playwright test tests/structure/package-structure.spec.ts --timeout=30000)",
      "Bash(TEST_MODE=pyz npx playwright test tests/integration/server-integration.spec.ts --timeout=60000)",
      "Bash(TEST_MODE=pyz npx playwright test --timeout=60000)",
      "Bash(TEST_MODE=dev npx playwright test tests/integration/server-integration.spec.ts --grep \"should have Vite dev server running with hot reload\" --timeout=30000)",
      "Bash(TEST_MODE=dev npx playwright test tests/ui/word-count-tool.spec.ts --grep \"should have Execute tab with functional word-count execution\" --timeout=30000)",
      "Bash(make:*)",
      "Bash(open http://localhost:5173)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(pip uninstall:*)",
      "Bash(./scripts/validate-pre-push.sh:*)",
      "Bash(tsc:*)",
      "Bash(./.husky/pre-push:*)",
      "Bash(mypy:*)",
      "Bash(git merge:*)",
      "Bash(git remote get-url:*)",
      "Bash(gh pr diff:*)",
      "Bash(flyctl apps:*)",
      "Bash(jq:*)",
      "Bash(git rev-parse:*)",
      "Bash(ruff check:*)",
      "Bash(docker build:*)",
      "Bash(docker rm:*)",
      "Bash(docker run:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(docker stop:*)",
      "Bash(open:*)",
      "Bash(docker rmi:*)",
      "Bash(docker system prune:*)",
      "Bash(gtimeout:*)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(xargs cat:*)",
      "WebFetch(domain:vscode-elements.github.io)",
      "Bash(test:*)",
      "WebFetch(domain:leafletjs.com)",
      "WebFetch(domain:levelup.gitconnected.com)",
      "WebFetch(domain:medium.com)",
      "Read(//Users/ian/git/future-debrief-parent/**)",
      "Bash(git mv:*)",
      "Bash(.husky/pre-push:*)",
      "Bash(bash .husky/pre-push:*)",
      "Bash(gh run list:*)",
      "Bash(gh api:*)",
      "Bash(git show:*)",
      "Bash(./scripts/cleanup-flyio-apps.sh:*)"
    ]
  }
}
