name: Tool Vault PR Cleanup

on:
  pull_request:
    types: [closed]
    paths:
      - 'libs/tool-vault-packager/**'

jobs:
  pr-cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    
    steps:
    - name: Setup Fly CLI
      uses: superfly/flyctl-actions/setup-flyctl@master
    
    - name: Cleanup Fly.io PR app
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      run: |
        if [ -z "$FLY_API_TOKEN" ]; then
          echo "⚠️ FLY_API_TOKEN not configured, skipping Fly.io cleanup"
          echo "cleanup_status=skipped" >> $GITHUB_ENV
          exit 0
        fi
        
        APP_NAME="toolvault-pr-${{ github.event.number }}"
        
        # Check if app exists and delete it
        if flyctl apps list | grep -q "^${APP_NAME}"; then
          echo "Deleting Fly.io app: $APP_NAME"
          flyctl apps destroy "$APP_NAME" --yes
          echo "✅ Fly.io app deleted successfully"
          echo "cleanup_status=success" >> $GITHUB_ENV
        else
          echo "ℹ️ Fly.io app $APP_NAME not found, nothing to cleanup"
          echo "cleanup_status=not_found" >> $GITHUB_ENV
        fi
    
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const cleanupStatus = process.env.cleanup_status;
          
          let statusMessage = '';
          if (cleanupStatus === 'success') {
            statusMessage = `The preview Fly.io app \`toolvault-pr-${prNumber}\` has been cleaned up after PR merge.`;
          } else if (cleanupStatus === 'not_found') {
            statusMessage = `No preview app found for \`toolvault-pr-${prNumber}\` - nothing to cleanup.`;
          } else if (cleanupStatus === 'skipped') {
            statusMessage = `Preview app cleanup skipped - Fly.io credentials not configured.`;
          } else {
            statusMessage = `Preview app cleanup completed for \`toolvault-pr-${prNumber}\`.`;
          }
          
          const comment = `
          ## 🧹 Tool Vault Cleanup Complete
          
          ${statusMessage}
          `;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });