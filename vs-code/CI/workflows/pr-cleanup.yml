name: PR Preview Cleanup

on:
  pull_request:
    types: [closed]
    branches: [main]

concurrency:
  group: destroy-preview-${{ github.event.number }}
  cancel-in-progress: false

jobs:
  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository
    
    steps:
    - name: Setup Fly CLI
      uses: superfly/flyctl-actions/setup-flyctl@master
      
    - name: Verify Fly CLI installation
      run: |
        echo "PATH: $PATH"
        which flyctl
        flyctl version
    
    - name: Generate app name
      id: config
      run: |
        PR_NUMBER="${{ github.event.number }}"
        APP_NAME="pr-${PR_NUMBER}-futuredebrief"
        
        echo "pr_number=${PR_NUMBER}" >> $GITHUB_OUTPUT
        echo "app_name=${APP_NAME}" >> $GITHUB_OUTPUT
        
        echo "Will attempt to destroy app: ${APP_NAME}"
    
    - name: Destroy Fly.io app
      id: destroy
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      run: |
        APP_NAME="${{ steps.config.outputs.app_name }}"
        
        echo "Starting cleanup for app: ${APP_NAME}"
        echo "Cleanup initiated at $(date)"
        
        # Check if app exists before attempting to destroy
        if flyctl apps list | grep -q "^${APP_NAME}"; then
          echo "‚úÖ App ${APP_NAME} found, proceeding with destruction..."
          
          # Attempt to destroy the app with confirmation
          if flyctl apps destroy "${APP_NAME}" --yes; then
            echo "‚úÖ Successfully destroyed app: ${APP_NAME}"
            echo "cleanup_status=success" >> $GITHUB_OUTPUT
            echo "cleanup_message=App successfully destroyed" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Failed to destroy app: ${APP_NAME}"
            echo "cleanup_status=failed" >> $GITHUB_OUTPUT
            echo "cleanup_message=App destruction failed" >> $GITHUB_OUTPUT
          fi
        else
          echo "‚ÑπÔ∏è  App ${APP_NAME} not found (may have been already destroyed or never created)"
          echo "cleanup_status=not_found" >> $GITHUB_OUTPUT
          echo "cleanup_message=App not found (already destroyed or never created)" >> $GITHUB_OUTPUT
        fi
        
        echo "Cleanup completed at $(date)"
        
        # List remaining apps to verify cleanup (for debugging)
        echo "Remaining preview apps:"
        flyctl apps list | grep "pr-.*-futuredebrief" || echo "No preview apps remaining"
    
    - name: Post PR comment about cleanup
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ github.event.number }};
          const appName = "${{ steps.config.outputs.app_name }}";
          const cleanupStatus = "${{ steps.destroy.outputs.cleanup_status }}";
          const cleanupMessage = "${{ steps.destroy.outputs.cleanup_message }}";
          
          let commentBody;
          
          if (cleanupStatus === 'success') {
            commentBody = `## üßπ PR Preview Cleaned Up
            
            Your PR preview environment has been automatically destroyed.
            
            **‚úÖ Cleanup successful!**
            - **App Name:** \`${appName}\`
            - **Status:** ${cleanupMessage}
            - **PR:** #${prNumber}
            
            All associated resources have been removed from Fly.io to optimize costs.`;
          } else if (cleanupStatus === 'not_found') {
            commentBody = `## üßπ PR Preview Cleanup
            
            **‚ÑπÔ∏è  No cleanup needed**
            - **App Name:** \`${appName}\`
            - **Status:** ${cleanupMessage}
            - **PR:** #${prNumber}
            
            The preview environment was already removed or never existed.`;
          } else {
            commentBody = `## üßπ PR Preview Cleanup
            
            **‚ö†Ô∏è  Cleanup encountered an issue**
            - **App Name:** \`${appName}\`
            - **Status:** ${cleanupMessage}
            - **PR:** #${prNumber}
            
            Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
            
            The preview environment may need manual cleanup to avoid ongoing costs.`;
          }
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: commentBody
          });
          
          console.log(`Posted cleanup comment for PR #${prNumber} with status: ${cleanupStatus}`);
    
    - name: Handle cleanup failure
      if: steps.destroy.outputs.cleanup_status == 'failed'
      run: |
        echo "‚ö†Ô∏è  Cleanup failed for app: ${{ steps.config.outputs.app_name }}"
        echo "Manual intervention may be required to remove the Fly.io app"
        echo "Check Fly.io dashboard: https://fly.io/dashboard/personal/apps"
        exit 1