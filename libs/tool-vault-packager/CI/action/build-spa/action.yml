name: 'Build Tool Vault SPA'
description: 'Build the Single Page Application for Tool Vault'
inputs:
  ref:
    description: 'Git ref to checkout'
    required: false
    default: ''

outputs:
  spa_path:
    description: 'Path to the built SPA'
    value: 'libs/tool-vault-packager/spa/dist'

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install SPA dependencies
      shell: bash
      working-directory: libs/tool-vault-packager/spa
      run: |
        echo "üì¶ Installing SPA dependencies..."
        echo "Working directory: $(pwd)"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        
        # Clean npm cache to avoid potential corruption issues
        npm cache clean --force
        
        # Try npm ci first, fallback to regenerating package-lock if needed
        if ! npm ci; then
          echo "‚ö†Ô∏è  npm ci failed, attempting recovery..."
          echo "This may be due to corrupted package-lock.json"
          
          # Backup the original package-lock.json
          if [ -f "package-lock.json" ]; then
            cp package-lock.json package-lock.json.backup
            echo "üìã Backed up package-lock.json"
          fi
          
          # Try npm install to regenerate the lockfile
          if ! npm install; then
            echo "‚ùå npm install also failed"
            # If we have a backup, restore it and try again
            if [ -f "package-lock.json.backup" ]; then
              echo "üîÑ Restoring backup and trying fresh install..."
              rm -f package-lock.json
              rm -rf node_modules
              npm install
            else
              echo "‚ùå No backup available, installation failed"
              exit 1
            fi
          else
            echo "‚úÖ Successfully recovered with npm install"
          fi
        fi
    
    - name: Build SPA
      shell: bash
      working-directory: libs/tool-vault-packager
      run: |
        npm run build:spa
        
        # Verify SPA was built
        if [ -d "spa/dist" ]; then
          echo "‚úÖ SPA built successfully"
          ls -la spa/dist/
        else
          echo "‚ùå SPA build failed"
          exit 1
        fi