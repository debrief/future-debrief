name: 'Package Tool Vault PYZ'
description: 'Package the Tool Vault application into a .pyz file'
inputs:
  ref:
    description: 'Git ref to checkout'
    required: false
    default: ''

outputs:
  pyz_path:
    description: 'Path to the generated .pyz file'
    value: 'libs/tool-vault-packager/toolvault.pyz'

runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Clean up previous ToolVault comments
      shell: bash
      run: |
        # Delete previous ToolVault CI comments to avoid clutter
        if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
          echo "üßπ Cleaning up previous ToolVault comments..."
          gh api repos/$GITHUB_REPOSITORY/issues/${{ github.event.pull_request.number }}/comments \
            --jq '.[] | select(.body | contains("## ToolVault Build")) | .id' | \
            xargs -I {} gh api repos/$GITHUB_REPOSITORY/issues/comments/{} -X DELETE || echo "No previous comments to delete"
        else
          echo "Not a pull request, skipping comment cleanup"
        fi
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Install Python dependencies
      shell: bash
      working-directory: libs/tool-vault-packager
      run: |
        pip install -r requirements.txt
    
    - name: Package PYZ
      shell: bash
      working-directory: libs/tool-vault-packager
      run: |
        npm run build

        # Verify PYZ was created
        if [ -f "toolvault.pyz" ]; then
          echo "‚úÖ PYZ packaged successfully"
          ls -la toolvault.pyz
          echo "PYZ file size: $(du -h toolvault.pyz | cut -f1)"
        else
          echo "‚ùå PYZ packaging failed"
          exit 1
        fi

