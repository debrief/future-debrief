name: 'Tool Vault Main Pipeline'
description: 'Complete CI/CD pipeline for Tool Vault packager'
inputs:
  heroku_api_key:
    description: 'Heroku API key for deployment'
    required: true
  heroku_app_name:
    description: 'Name of the Heroku app'
    required: false
    default: 'toolvault-server'
  artifact_retention_days:
    description: 'Days to retain artifacts'
    required: false
    default: '30'
  skip_deployment:
    description: 'Skip Heroku deployment'
    required: false
    default: 'false'

outputs:
  deployment_url:
    description: 'URL of the deployed application'
    value: ${{ steps.deploy.outputs.deployment_url }}
  artifact_name:
    description: 'Name of the published artifact'
    value: ${{ steps.publish.outputs.artifact_name }}

runs:
  using: 'composite'
  steps:
    - name: Pipeline start notification
      shell: bash
      run: |
        echo "### 🔧 Tool Vault CI/CD Pipeline Started" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Ref:** ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
    
    - name: Build SPA
      uses: ./libs/tool-vault-packager/CI/action/build-spa
      with:
        ref: ${{ github.sha }}
    
    - name: Package PYZ
      uses: ./libs/tool-vault-packager/CI/action/package-pyz
      with:
        ref: ${{ github.sha }}
    
    - name: Test PYZ
      uses: ./libs/tool-vault-packager/CI/action/test-pyz
      with:
        ref: ${{ github.sha }}
    
    - name: Publish Artifact
      id: publish
      uses: ./libs/tool-vault-packager/CI/action/publish-artifact
      with:
        ref: ${{ github.sha }}
        artifact_retention_days: ${{ inputs.artifact_retention_days }}
    
    - name: Deploy to Heroku
      id: deploy
      if: inputs.skip_deployment != 'true'
      uses: ./libs/tool-vault-packager/CI/action/deploy-heroku
      with:
        heroku_api_key: ${{ inputs.heroku_api_key }}
        heroku_app_name: ${{ inputs.heroku_app_name }}
        ref: ${{ github.sha }}
    
    - name: Pipeline completion notification
      shell: bash
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Pipeline Completed Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ inputs.skip_deployment }}" != "true" ]; then
          echo "🚀 **Deployed to:** ${{ steps.deploy.outputs.deployment_url }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "⏭️ **Deployment skipped**" >> $GITHUB_STEP_SUMMARY
        fi
        echo "📦 **Artifact:** ${{ steps.publish.outputs.artifact_name }}" >> $GITHUB_STEP_SUMMARY