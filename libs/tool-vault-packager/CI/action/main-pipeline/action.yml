name: 'Tool Vault Main Pipeline'
description: 'Complete CI/CD pipeline for Tool Vault packager'
inputs:
  fly_api_token:
    description: 'Fly.io API token for deployment'
    required: true
  artifact_retention_days:
    description: 'Days to retain artifacts'
    required: false
    default: '30'
  skip_deployment:
    description: 'Skip Fly.io deployment'
    required: false
    default: 'false'
  is_pr:
    description: 'Whether this is a PR deployment'
    required: false
    default: 'false'
  pr_number:
    description: 'PR number for PR deployments'
    required: false

outputs:
  deployment_url:
    description: 'URL of the deployed application'
    value: ${{ steps.deploy.outputs.app_url }}
  artifact_name:
    description: 'Name of the published artifact'
    value: ${{ steps.publish.outputs.artifact_name }}

runs:
  using: 'composite'
  steps:
    - name: Pipeline start notification
      shell: bash
      run: |
        echo "### 🔧 Tool Vault CI/CD Pipeline Started" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Ref:** ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
    
    - name: Setup Node.js for shared-types build
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Build shared-types package
      shell: bash
      run: |
        echo "📦 Building shared-types package to create Python wheel..."
        cd libs/shared-types
        pnpm install --no-frozen-lockfile
        pnpm build
        echo "✅ Shared-types build completed"
        ls -la dist/python/ || echo "Python dist directory not found"

    - name: Build SPA
      uses: ./libs/tool-vault-packager/CI/action/build-spa
      with:
        ref: ${{ github.sha }}

    - name: Package PYZ
      uses: ./libs/tool-vault-packager/CI/action/package-pyz
      with:
        ref: ${{ github.sha }}
    
    - name: Test PYZ
      uses: ./libs/tool-vault-packager/CI/action/test-pyz
      with:
        ref: ${{ github.sha }}
    
    - name: Publish Artifact
      id: publish
      uses: ./libs/tool-vault-packager/CI/action/publish-artifact
      with:
        ref: ${{ github.sha }}
        artifact_retention_days: ${{ inputs.artifact_retention_days }}
    
    - name: Deploy to Fly.io
      id: deploy
      if: inputs.skip_deployment != 'true'
      uses: ./libs/tool-vault-packager/CI/action/deploy-fly
      with:
        app_name: ${{ inputs.is_pr == 'true' && format('toolvault-pr-{0}', inputs.pr_number) || 'toolvault-main' }}
        config_file: ${{ inputs.is_pr == 'true' && 'fly-template.toml' || 'fly-production.toml' }}
        build_args: |
          GITHUB_SHA=${{ github.sha }}
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        github_sha: ${{ github.sha }}
        fly_api_token: ${{ inputs.fly_api_token }}
    
    - name: Pipeline completion notification
      shell: bash
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Pipeline Completed Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ inputs.skip_deployment }}" != "true" ]; then
          echo "🚀 **Deployed to Fly.io:** ${{ steps.deploy.outputs.app_url }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "⏭️ **Deployment skipped**" >> $GITHUB_STEP_SUMMARY
        fi
        echo "📦 **Artifact:** ${{ steps.publish.outputs.artifact_name }}" >> $GITHUB_STEP_SUMMARY