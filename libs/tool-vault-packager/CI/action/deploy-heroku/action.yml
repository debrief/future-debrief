name: 'Deploy Tool Vault to Heroku'
description: 'Deploy the packaged .pyz file to Heroku'
inputs:
  heroku_api_key:
    description: 'Heroku API key for deployment'
    required: true
  heroku_app_name:
    description: 'Name of the Heroku app'
    required: false
    default: 'toolvault-server'
  ref:
    description: 'Git ref to checkout'
    required: false
    default: ''

outputs:
  deployment_url:
    description: 'URL of the deployed application'
    value: ${{ steps.deploy.outputs.url }}

runs:
  using: 'composite'
  steps:
    - name: Install Heroku CLI
      shell: bash
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        heroku --version
    
    - name: Authenticate with Heroku
      shell: bash
      env:
        HEROKU_API_KEY: ${{ inputs.heroku_api_key }}
      run: |
        # Set up Heroku authentication using API key
        echo "🔐 Authenticating with Heroku..."
        heroku auth:whoami || echo "Not authenticated yet"
        
        # The HEROKU_API_KEY environment variable is automatically used by Heroku CLI
        echo "✅ Heroku authentication configured"
    
    - name: Prepare deployment directory
      shell: bash
      working-directory: libs/tool-vault-packager
      run: |
        # Create a deployment directory with necessary files
        mkdir -p deploy
        cp toolvault.pyz deploy/
        
        # Create Procfile for Heroku
        cat > deploy/Procfile << EOF
        web: python toolvault.pyz serve --port \$PORT --host 0.0.0.0
        EOF
        
        # Create requirements.txt for Heroku Python buildpack
        cat > deploy/requirements.txt << EOF
        # Heroku requires a requirements.txt for Python buildpack detection
        # The actual dependencies are bundled in the .pyz file
        EOF
        
        # Create runtime.txt to specify Python version
        cat > deploy/runtime.txt << EOF
        python-3.11.9
        EOF
        
        echo "Deployment files created:"
        ls -la deploy/
    
    - name: Deploy to Heroku
      id: deploy
      shell: bash
      env:
        HEROKU_API_KEY: ${{ inputs.heroku_api_key }}
      working-directory: libs/tool-vault-packager/deploy
      run: |
        # Initialize git repo for deployment
        git init
        git config user.email "ci@example.com"
        git config user.name "CI Deploy"
        
        # Try to create or use existing Heroku app
        heroku apps:info ${{ inputs.heroku_app_name }} || heroku create ${{ inputs.heroku_app_name }}
        
        # Add Heroku remote
        heroku git:remote -a ${{ inputs.heroku_app_name }}
        
        # Commit and deploy
        git add .
        git commit -m "Deploy toolvault.pyz $(date)"
        git push heroku main --force
        
        # Get the app URL
        APP_URL=$(heroku apps:info ${{ inputs.heroku_app_name }} --json | python -c "import sys, json; print(json.load(sys.stdin)['app']['web_url'])")
        echo "url=$APP_URL" >> $GITHUB_OUTPUT
        echo "Deployed to: $APP_URL"
    
    - name: Test deployment
      shell: bash
      env:
        HEROKU_API_KEY: ${{ inputs.heroku_api_key }}
      run: |
        APP_URL="${{ steps.deploy.outputs.url }}"
        echo "Testing deployment at: $APP_URL"
        
        # Wait for deployment to be ready
        sleep 30
        
        # Test the deployment
        if curl -f --connect-timeout 30 --max-time 60 "$APP_URL" > /dev/null 2>&1; then
          echo "✅ Deployment is accessible"
        else
          echo "⚠️ Deployment might still be starting up"
          echo "Please check manually: $APP_URL"
        fi
    
    - name: Deployment summary
      shell: bash
      run: |
        echo "### 🚀 Heroku Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **App Name:** ${{ inputs.heroku_app_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **URL:** ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The Tool Vault server is now running on Heroku!" >> $GITHUB_STEP_SUMMARY