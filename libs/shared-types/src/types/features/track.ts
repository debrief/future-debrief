/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

// Post-processed by post_process_typescript.js

// Enhanced post-processed - missing type definitions added
export type Id = string | number;
export type TrackProperties = { dataType: "track"; times?: (string | number)[]; [key: string]: any; };
export type JSONSchema = any;
export interface Feature { type: "Feature"; geometry: Geometry; properties: Properties; }

export type Bbox = [number, number, number, number] | [number, number, number, number, number, number];
export type Type = string;
export type Properties = { [key: string]: any; } | null;
export type Position = [number, number] | [number, number, number];

// Basic GeoJSON geometry types
export interface Point { type: "Point"; coordinates: Position; }
export interface LineString { type: "LineString"; coordinates: Position[]; }
export interface Polygon { type: "Polygon"; coordinates: Position[][]; }
export interface MultiPoint { type: "MultiPoint"; coordinates: Position[]; }
export interface MultiLineString { type: "MultiLineString"; coordinates: Position[][]; }
export interface MultiPolygon { type: "MultiPolygon"; coordinates: Position[][][]; }
export interface GeometryCollection { type: "GeometryCollection"; geometries: Geometry[]; }
export type Geometry = Point | LineString | Polygon | MultiPoint | MultiLineString | MultiPolygon | GeometryCollection;


/**
 * A GeoJSON Feature representing a track with LineString or MultiLineString geometry.
 */
export interface DebriefTrackFeature {
  bbox?: Bbox;
  type: Type;
  geometry: Geometry;
  properties: TrackProperties;
  id?: Id;
  [k: string]: unknown;
}
